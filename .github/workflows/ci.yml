
name: Continuous integration

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  apk:
    name: Build APK
    runs-on: ubuntu-20.04

    steps:
      # Checkout the repository
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      # Setup Java environment (Java 11 for Android)
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu' # or 'zulu', etc.
          java-version: '17'

      # Cache Gradle dependencies
      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}

      # Set up Android SDK
      - name: Set up Android SDK
        uses: android-actions/setup-android@v2
        with:
          api-level: 30
          build-tools: 30.0.3
          ndk: 21.1.6352462 # if NDK is needed
          cache: true

      # Make gradlew executable
      - name: Make gradlew executable
        run: chmod +x ./gradlew

      # Build the Debug APK
      - name: Build debug APK
        run: ./gradlew assembleDebug --stacktrace

      # Run Lint checks (optional)
      #- name: Run Lint checks
       # run: ./gradlew lint

      # Upload APK as build artifact
      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: debug-apk
          path: app/build/outputs/apk/debug/

      # Optional: Upload Lint reports (if lint step is added)
      - name: Upload Lint Report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: lint-report
          path: app/build/reports/lint-results.html
